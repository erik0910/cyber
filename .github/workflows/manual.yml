name: Generate SBOM (macOS & Windows)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  generate_sbom:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Syft (macOS)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Install Syft (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        Invoke-WebRequest -Uri https://raw.githubusercontent.com/anchore/syft/main/install.ps1 -OutFile install.ps1
        ./install.ps1 -InstallDir 'C:\Program Files\syft'
        $env:PATH += ";C:\Program Files\syft"
        syft --version # Verify installation

    - name: Generate SBOM with Syft
      id: generate
      run: syft ~/ -o cyclonedx-json=bom.json

    - name: Upload SBOM as artifact
      uses: actions/upload-artifact@v3
      with:
        name: sbom-${{ matrix.os }}
        path: bom.json

    # Opcional: Subir a Dependency-Track (se ejecutarÃ¡ en ambos OS)
    - name: Get Project ID from Dependency-Track
      if: env.DEPENDENCY_TRACK_API_KEY && env.DEPENDENCY_TRACK_PROJECT_NAME
      id: get_project_id
      run: |
        PROJECT_ID=$(curl -s -H "X-Api-Key: ${{ env.DEPENDENCY_TRACK_API_KEY }}" "${{ env.DEPENDENCY_TRACK_URL }}/api/v1/project/lookup?name=${{ env.DEPENDENCY_TRACK_PROJECT_NAME }}" | jq -r '.uuid')
        echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_OUTPUT
      env:
        DEPENDENCY_TRACK_URL: 'http://localhost:8080' # Reemplaza si es diferente
        DEPENDENCY_TRACK_API_KEY: ${{ secrets.DEPENDENCY_TRACK_API_KEY }} # Configura como secreto
        DEPENDENCY_TRACK_PROJECT_NAME: 'SbomLocal' # Reemplaza
      shell: bash

    - name: Upload SBOM to Dependency-Track
      if: steps.get_project_id.outputs.PROJECT_ID
      run: |
        curl -X PUT \
          -H "X-Api-Key: ${{ env.DEPENDENCY_TRACK_API_KEY }}" \
          -F "bomFile=@bom.json" \
          "${{ env.DEPENDENCY_TRACK_URL }}/api/v1/bom?projectId=${{ steps.get_project_id.outputs.PROJECT_ID }}"
        echo "SBOM subido exitosamente a Dependency-Track from ${{ matrix.os }}"
      env:
        DEPENDENCY_TRACK_URL: 'http://localhost:8080' # Reemplaza si es diferente
        DEPENDENCY_TRACK_API_KEY: ${{ secrets.DEPENDENCY_TRACK_API_KEY }} # Configura como secreto
      shell: bash
      continue-on-error: true # Opcional: No fallar el workflow si la subida falla
